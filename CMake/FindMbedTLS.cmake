find_path(MBEDTLS_INCLUDE_DIR mbedtls/ssl.h)

find_library(MBEDTLS_LIBRARY mbedtls)
find_library(MBEDX509_LIBRARY mbedx509)
find_library(MBEDCRYPTO_LIBRARY mbedcrypto)

set(MBEDTLS_INCLUDE_DIRS ${MBEDTLS_INCLUDE_DIR})
set(MBEDTLS_LIBRARIES ${MBEDTLS_LIBRARY} ${MBEDX509_LIBRARY} ${MBEDCRYPTO_LIBRARY})

set(CMAKE_REQUIRED_INCLUDES ${MBEDTLS_INCLUDE_DIRS})
check_cxx_source_compiles("
  #include <mbedtls/version.h>
  #if MBEDTLS_VERSION_NUMBER < 0x02040000
  #error \"Your mbed TLS version is too old.\"
  #endif
  int main() {}"
  MBEDTLS_VERSION_OK
)

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(MBEDTLS_MAIN DEFAULT_MSG
  MBEDTLS_INCLUDE_DIR
  MBEDTLS_LIBRARY
  MBEDTLS_VERSION_OK
)

find_package_handle_standard_args(MBEDTLS_CRYPTO DEFAULT_MSG
  MBEDTLS_INCLUDE_DIR
  MBEDCRYPTO_LIBRARY
  MBEDTLS_VERSION_OK
)

find_package_handle_standard_args(MBEDTLS_X509 DEFAULT_MSG
  MBEDTLS_INCLUDE_DIR
  MBEDX509_LIBRARY
  MBEDTLS_VERSION_OK
)

if (MBEDTLS_CRYPTO_FOUND AND NOT TARGET MbedTLS::Crypto)
  add_library(MbedTLS::Crypto UNKNOWN IMPORTED)
  set_target_properties(MbedTLS::Crypto PROPERTIES
    IMPORTED_LOCATION ${MBEDCRYPTO_LIBRARY}
    INTERFACE_INCLUDE_DIRECTORIES ${MBEDTLS_INCLUDE_DIRS}
  )

  if (MBEDTLS_X509_FOUND AND NOT TARGET MbedTLS::X509)
    add_library(MbedTLS::X509 UNKNOWN IMPORTED)
    set_target_properties(MbedTLS::X509 PROPERTIES
      IMPORTED_LOCATION ${MBEDX509_LIBRARY}
      INTERFACE_INCLUDE_DIRECTORIES ${MBEDTLS_INCLUDE_DIRS}
      INTERFACE_LINK_LIBRARIES MbedTLS::Crypto
    )

    if (MBEDTLS_MAIN_FOUND AND NOT TARGET MbedTLS::MbedTLS)
      add_library(MbedTLS::MbedTLS UNKNOWN IMPORTED)
      set_target_properties(MbedTLS::MbedTLS PROPERTIES
        IMPORTED_LOCATION ${MBEDTLS_LIBRARY}
        INTERFACE_INCLUDE_DIRECTORIES ${MBEDTLS_INCLUDE_DIRS}
        INTERFACE_LINK_LIBRARIES MbedTLS::X509
      )
    endif()
  endif()
endif()

mark_as_advanced(MBEDTLS_INCLUDE_DIR MBEDTLS_LIBRARY MBEDX509_LIBRARY MBEDCRYPTO_LIBRARY)

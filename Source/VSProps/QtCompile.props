<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Label="UserMacros">
    <QTDIRDefault>$(ExternalsDir)Qt5.3.1\5.3\msvc2013_64_opengl\</QTDIRDefault>
    <QTDIR Condition="Exists('$(QTDIRDefault)') And '$(QTDIR)'==''">$(QTDIRDefault)</QTDIR>
    <QTDIR Condition="Exists('$(QTDIR)') And !HasTrailingSlash('$(QTDIR)')">$(QTDIR)\</QTDIR>
    <QtIncludeDir>$(QTDIR)include\</QtIncludeDir>
    <QtLibDir>$(QTDIR)lib\</QtLibDir>
    <QtBinDir>$(QTDIR)bin\</QtBinDir>
    <QtToolOutDir>$(IntDir)</QtToolOutDir>
    <QtMocOutPrefix>$(QtToolOutDir)moc_</QtMocOutPrefix>
    <QtLibSuffix Condition="'$(Configuration)'=='Debug'">d</QtLibSuffix>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <PreprocessorDefinitions Condition="'$(Configuration)'=='Release'">QT_NO_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions>QT_DLL;QT_CORE_LIB;QT_GUI_LIB;QT_WIDGETS_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions>QT_USE_QSTRINGBUILDER;QT_NO_CAST_FROM_ASCII;QT_NO_CAST_TO_ASCII;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(ProjectDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalIncludeDirectories>$(QtToolOutDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalIncludeDirectories>$(QtIncludeDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalIncludeDirectories>$(QtIncludeDir)QtCore;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalIncludeDirectories>$(QtIncludeDir)QtGui;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalIncludeDirectories>$(QtIncludeDir)QtWidgets;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>$(QtLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>qtmain$(QtLibSuffix).lib;Qt5Core$(QtLibSuffix).lib;Qt5Gui$(QtLibSuffix).lib;Qt5Widgets$(QtLibSuffix).lib;%(AdditionalDependencies)</AdditionalDependencies>
      <!--
      <AdditionalOptions>"/manifestdependency:type='Win32' name='Microsoft.Windows.Common-Controls' version='6.0.0.0' processorArchitecture='*' publicKeyToken='6595b64144ccf1df' language='*'\" %(AdditionalOptions)</AdditionalOptions>
      -->
    </Link>
  </ItemDefinitionGroup>
  
  <!--Passes all .qrc files to rcc and puts output in the build directory-->
  <ItemGroup>
    <ResFiles Include="$(MSBuildProjectDirectory)\**\*.qrc" />
  </ItemGroup>
  <Target Name="QtResource"
    BeforeTargets="ClCompile"
    Inputs="@(ResFiles)"
    Outputs="@(ResFiles->'$(QtToolOutDir)qrc_%(Filename).h')">
    <Message Text="rcc %(ResFiles.Filename)" Importance="High" />
    <Error Condition="'$(QTDIR)'=='' Or !Exists('$(QTDIR)')" Text="QTDIR not set or non-existent (pull the submodule?)" />
    <MakeDir Directories="$(QtToolOutDir)" />
    <Exec Command="$(QtBinDir)rcc.exe %(ResFiles.FullPath) -o $(QtToolOutDir)qrc_%(ResFiles.Filename).h" />
  </Target>
  
  <Target Name="QtResourceClean">
    <Delete Files="@(ResFiles->'$(QtToolOutDir)qrc_%(Filename).h')" />
  </Target>
  
  <!--Passes all .ui files to uic and puts output in the build directory-->
  <ItemGroup>
    <UiFiles Include="$(MSBuildProjectDirectory)\**\*.ui" />
  </ItemGroup>
  <Target Name="QtUi"
    BeforeTargets="ClCompile"
    Inputs="@(UiFiles)"
    Outputs="@(UiFiles->'$(QtToolOutDir)ui_%(Filename).h')">
    <Message Text="uic %(UiFiles.Filename)" Importance="High" />
    <Error Condition="'$(QTDIR)'=='' Or !Exists('$(QTDIR)')" Text="QTDIR not set or non-existent (pull the submodule?)" />
    <MakeDir Directories="$(QtToolOutDir)" />
    <Exec Command="$(QtBinDir)uic.exe %(UiFiles.FullPath) -o $(QtToolOutDir)ui_%(UiFiles.Filename).h" />
  </Target>
  
  <Target Name="QtUiClean">
    <Delete Files="@(UiFiles->'$(QtToolOutDir)ui_%(Filename).h')" />
  </Target>
  
  <!--Compile files needed to MOC and output in the build directory-->
  <!--TODO find a way to autocreate from ClCompile settings-->
  <PropertyGroup>
    <MocDefines>-DQT_USE_QSTRINGBUILDER -DQT_NO_CAST_FROM_ASCII -DQT_NO_CAST_TO_ASCII -DQT_DLL -DQT_CORE_LIB -DQT_GUI_LIB -DQT_WIDGETS_LIB -D_SECURE_SCL=0 -D_ARCH_64=1 -D_M_X86_64=1 -DPSAPI_VERSION=1 -D_M_X86=1 -DUSE_UPNP -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_UNICODE -DUNICODE</MocDefines>
    <MocDefines Condition="'$(Configuration)'=='Release'">-DQT_NO_DEBUG -DNDEBUG $(MocDefines)</MocDefines>
    <MocIncludes>-I$(QtIncludeDir)QtWidgets -I$(QtIncludeDir)QtGui -I$(QtIncludeDir)QtCore -I$(QtIncludeDir) -I$(QtToolOutDir) -I.</MocIncludes>
    <MocIncludes>-I$(ExternalsDir)zlib -I$(ExternalsDir)SOIL -I$(ExternalsDir)SFML\include -I$(ExternalsDir)portaudio\include -I$(ExternalsDir)polarssl\include -I$(ExternalsDir)miniupnpc\src -I$(ExternalsDir)LZO -I$(ExternalsDir)libusbx\libusb -I$(ExternalsDir)libpng -I$(ExternalsDir)GL -I$(ExternalsDir)Bochs_disasm -I$(ExternalsDir) -I$(CoreDir) $(MocIncludes)</MocIncludes>
  </PropertyGroup>
  <Target Name="QtMoc"
    BeforeTargets="ClCompile"
    Condition="'@(QtMoc)'!=''"
    Inputs="%(QtMoc.Identity);%(QtMoc.AdditionalDependencies);$(MSBuildProjectFile)"
    Outputs="$(QtToolOutDir)moc_%(QtMoc.Filename).cpp">
    <Message Text="moc %(QtMoc.Filename)" Importance="High" />
    <Error Condition="'$(QTDIR)'=='' Or !Exists('$(QTDIR)')" Text="QTDIR not set or non-existent (pull the submodule?)" />
    <MakeDir Directories="$(QtToolOutDir)" />
    <Exec Command="$(QtBinDir)moc.exe %(QtMoc.FullPath) -o $(QtToolOutDir)moc_%(QtMoc.Filename).cpp -f%(QtMoc.Filename)%(QtMoc.Extension) $(MocDefines) $(MocIncludes)" />
  </Target>
  
  <ItemGroup>
    <MocOutputs Include="$(QtToolOutDir)moc_*.cpp" />
  </ItemGroup>
  <Target Name="QtMocClean">
    <Delete Files="@(MocOutputs)" />
  </Target>
  
  <!--Expose the new targets to VS-->
  <ItemGroup>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).xml" />
    <AvailableItemName Include="QtResource">
      <Targets>QtResource</Targets>
    </AvailableItemName>
    <AvailableItemName Include="QtUi">
      <Targets>QtUi</Targets>
    </AvailableItemName>
    <AvailableItemName Include="QtMoc">
      <Targets>QtMoc</Targets>
    </AvailableItemName>
  </ItemGroup>
  
  <!--Copy the needed dlls-->
  <ItemGroup>
    <IcuDlls Include="icudt52;icuin52;icuuc52" />
    <QtLibNames Include="@(IcuDlls);Qt5Core$(QtLibSuffix);Qt5Gui$(QtLibSuffix);Qt5Widgets$(QtLibSuffix)" />
    <QtDlls Include="@(QtLibNames -> '$(QtBinDir)%(Identity).dll')" />
  </ItemGroup>
  <Target Name="QtCopyBinaries"
    AfterTargets="Build"
    Condition="'$(I_AM_BUILDACUS)'==''"
    Inputs="@(QtDlls)"
    Outputs="@(QtDlls -> '$(BinaryOutputDir)%(RecursiveDir)%(Filename)%(Extension)')">
    <Message Text="Copying Qt .dlls" Importance="High" />
    <Copy
        SourceFiles="@(QtDlls)"
        DestinationFolder="$(BinaryOutputDir)"
        Condition="!Exists('$(BinaryOutputDir)%(RecursiveDir)%(Filename)%(QtDlls.Extension)') OR $([System.DateTime]::Parse('%(ModifiedTime)').Ticks) &gt; $([System.IO.File]::GetLastWriteTime('$(BinaryOutputDir)%(RecursiveDir)%(Filename)%(QtDlls.Extension)').Ticks)"
    />
  </Target>
</Project>